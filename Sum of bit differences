Date - 29/02/2024

Question Link - https://www.geeksforgeeks.org/problems/sum-of-bit-differences2937/1

Question 
Sum of bit differences

Given an array integers arr[], containing n elements, find the sum of bit differences between all pairs of element in the array. Bit difference of a pair (x, y) is the count of different bits at the same positions in binary representations of x and y.
For example, bit difference for 2 and 7 is 2. Binary representation of 2 is 010 and 7 is 111 respectively and the first and last bits differ between the two numbers.

Note: (x, y) and (y, x) are considered two separate pairs.

Example

n = 3 
arr[] = {1, 3, 5}

Output: 8

Explanation: 
All possible pairs of an array are (1, 1), (1, 3), (1, 5), (3, 1), (3, 3) (3, 5),(5, 1), (5, 3), (5, 5).
Sum of bit differences = 0 + 1 + 1 + 1 + 0 + 2 + 1 + 2 + 0 
                       = 8


Code Solution - 

class Solution {
    long sumBitDifferences(int[] arr, int n) {
        // code here
        long cnt = 0;
        for(int i =31; i>=0;i--){
            long a =0;
            
            for(int j=0;j<n;j++){
                a+=(arr[j]>>i)&1;
            }
            
            cnt += 2*a*(n-a);
        }
        
        return cnt;
    }
}


Explanation - 

Note - Integer has max 2^31 as value i.e. 32 bits  (31 for calulation and 1 signed bit)

The intuition behind formula
ans+=(count * (n-count) * 2);

lets dry run with example
[2,4,3,5]
lets write it in binary form.
2 (010)
4 (100)
3 (011)
5 (101)


lets take last bit(from right) of each number as a,b,c,d respectively
so it'll become a->0,b->0,c->1,d->1.
at this instance we have 2 set bits(1s) and 2 non set bits(0s).


what are the different combinations we could get(01 or 10)?
that would be
ac ca
ad da
bc cb
bd db
the total count is 8.


how can we get above answer from formula?
In code we are counting total no of set bits, as from example above there are 2 set bits out of total numbers(n),so by subtracting n with no of set bits give no of 0's (4-2 ->2).

so we can make 2*2 ->4 combinations excluding duplicates as seen in our example(ab,ad,bc,bd).

the 2 we are multiplying in formula is because from above example we can see(ac ca) both gonna give same answer,so just multiply with 2 to get rid of duplicates.

so by applying in formula we'll get 
ans+=(no of set bits or 1's) * (no of 0's) * 2;
ans+=2*2*2 ->8.

dry run rest of bits(traverse towards right or left) you'll get the point.
